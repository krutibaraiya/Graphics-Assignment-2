\hypertarget{class_camera}{}\doxysection{Camera Class Reference}
\label{class_camera}\index{Camera@{Camera}}


Class to define camera.  




{\ttfamily \#include $<$Camera.\+h$>$}



Collaboration diagram for Camera\+:
% FIG 0
\doxysubsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \mbox{\hyperlink{struct_camera_1_1_angles}{Angles}}
\end{DoxyCompactItemize}
\doxysubsection*{Public Types}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{class_camera_a80cb65605322d27ad3b6d973484509ec}\label{class_camera_a80cb65605322d27ad3b6d973484509ec}} 
enum \mbox{\hyperlink{class_camera_a80cb65605322d27ad3b6d973484509ec}{Direction}} \{ \newline
{\bfseries F\+O\+R\+W\+A\+RD}, 
{\bfseries B\+A\+C\+K\+W\+A\+RD}, 
{\bfseries L\+E\+FT}, 
{\bfseries R\+I\+G\+HT}, 
\newline
{\bfseries UP}, 
{\bfseries D\+O\+WN}
 \}
\begin{DoxyCompactList}\small\item\em Simple enum to define a direction of movement. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\hyperlink{class_camera_a73f3549bd81cd2e2c09cb005c32e3d87}{Camera}} (const glm\+::vec3 \&position, const glm\+::vec3 \&target, const glm\+::vec3 \&world\+Up=\{0, 1, 0\})
\begin{DoxyCompactList}\small\item\em \mbox{\hyperlink{class_camera}{Camera}} class. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{class_camera_afb2aaa8b715ca3e098183820f93f32dd}{translate}} (\mbox{\hyperlink{class_camera_a80cb65605322d27ad3b6d973484509ec}{Camera\+::\+Direction}} direction)
\begin{DoxyCompactList}\small\item\em Move the camera along either up, front or right axis. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{class_camera_a6655a966c3ae0c11bc87b4e02b0e9c51}{look\+At}} ()
\begin{DoxyCompactList}\small\item\em Calculate the final M\+VP matrix and call glu\+Look\+At. Call this in render loop. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{class_camera_a02be8aa0dbef77e02dddc715a726fb67}{reset}} ()
\begin{DoxyCompactList}\small\item\em Reset the camera view back to initial parameters. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{class_camera_af01d82d9ccd3acbad8380224dcb2c422}{rotate}} (int x, int y)
\begin{DoxyCompactList}\small\item\em Modify the yaw and pitch of the camera. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{class_camera_a9d36fe054977d0ab83ff21e699f3641f}{rotate}} (int z)
\begin{DoxyCompactList}\small\item\em Modify the roll of the camera. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{class_camera_a62c2ad6713683230cfc336b3354f535f}{zoom}} (int y)
\begin{DoxyCompactList}\small\item\em Change the perspective angle. \end{DoxyCompactList}\item 
G\+Lfloat \mbox{\hyperlink{class_camera_afa70526212f130e218f840bb3f2ca3e8}{get\+Zoom}} () const
\begin{DoxyCompactList}\small\item\em Get the zoom factor of the camera, to be used for glu\+Perspective. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Public Attributes}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{class_camera_a42eae48350b7550002856b19859a2676}\label{class_camera_a42eae48350b7550002856b19859a2676}} 
struct \mbox{\hyperlink{struct_camera_1_1_angles}{Camera\+::\+Angles}} {\bfseries angles}
\item 
\mbox{\Hypertarget{class_camera_ab8d41a6169e1b87e388f6731ae67ca82}\label{class_camera_ab8d41a6169e1b87e388f6731ae67ca82}} 
struct \mbox{\hyperlink{struct_camera_1_1_angles}{Camera\+::\+Angles}} {\bfseries init\+Angles}
\end{DoxyCompactItemize}
\doxysubsection*{Static Public Attributes}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{class_camera_a3316dced1b4e4b44901d59348a3e5018}\label{class_camera_a3316dced1b4e4b44901d59348a3e5018}} 
constexpr static auto {\bfseries H\+A\+L\+F\+\_\+\+PI} = glm\+::half\+\_\+pi$<$G\+Lfloat$>$()
\item 
\mbox{\Hypertarget{class_camera_ab5485e3463a070c7f6644189bc3d1ef4}\label{class_camera_ab5485e3463a070c7f6644189bc3d1ef4}} 
constexpr static auto {\bfseries T\+W\+O\+\_\+\+PI} = glm\+::two\+\_\+pi$<$G\+Lfloat$>$()
\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
Class to define camera. 


\begin{DoxyParams}{Parameters}
{\em translation\+Sensitivity} & Sensitivity for translating the camera \\
\hline
{\em rotation\+Sensitivity} & Sensitivity for rotating the camera \\
\hline
{\em zoom\+Sensitivity} & Sensitivity for zoom in/out the camera \\
\hline
\end{DoxyParams}


\doxysubsection{Constructor \& Destructor Documentation}
\mbox{\Hypertarget{class_camera_a73f3549bd81cd2e2c09cb005c32e3d87}\label{class_camera_a73f3549bd81cd2e2c09cb005c32e3d87}} 
\index{Camera@{Camera}!Camera@{Camera}}
\index{Camera@{Camera}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{Camera()}{Camera()}}
{\footnotesize\ttfamily Camera\+::\+Camera (\begin{DoxyParamCaption}\item[{const glm\+::vec3 \&}]{position,  }\item[{const glm\+::vec3 \&}]{target,  }\item[{const glm\+::vec3 \&}]{world\+Up = {\ttfamily \{0,~1,~0\}} }\end{DoxyParamCaption})}



\mbox{\hyperlink{class_camera}{Camera}} class. 

Parametrized constructor to initialise \mbox{\hyperlink{class_camera}{Camera}} class.


\begin{DoxyParams}{Parameters}
{\em position} & Initial location of the camera \\
\hline
{\em target} & Co-\/ordinates of where the camera is pointing \\
\hline
{\em world\+Up} & Up vector for world view \\
\hline
\end{DoxyParams}


\doxysubsection{Member Function Documentation}
\mbox{\Hypertarget{class_camera_afa70526212f130e218f840bb3f2ca3e8}\label{class_camera_afa70526212f130e218f840bb3f2ca3e8}} 
\index{Camera@{Camera}!getZoom@{getZoom}}
\index{getZoom@{getZoom}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{getZoom()}{getZoom()}}
{\footnotesize\ttfamily G\+Lfloat Camera\+::get\+Zoom (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption}) const}



Get the zoom factor of the camera, to be used for glu\+Perspective. 

Method to get the zoom factor. \mbox{\Hypertarget{class_camera_a6655a966c3ae0c11bc87b4e02b0e9c51}\label{class_camera_a6655a966c3ae0c11bc87b4e02b0e9c51}} 
\index{Camera@{Camera}!lookAt@{lookAt}}
\index{lookAt@{lookAt}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{lookAt()}{lookAt()}}
{\footnotesize\ttfamily void Camera\+::look\+At (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Calculate the final M\+VP matrix and call glu\+Look\+At. Call this in render loop. 

Method to set the position and axis of camera. \mbox{\Hypertarget{class_camera_a02be8aa0dbef77e02dddc715a726fb67}\label{class_camera_a02be8aa0dbef77e02dddc715a726fb67}} 
\index{Camera@{Camera}!reset@{reset}}
\index{reset@{reset}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{reset()}{reset()}}
{\footnotesize\ttfamily void Camera\+::reset (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Reset the camera view back to initial parameters. 

Method to reset the camera position and axis to initial. \mbox{\Hypertarget{class_camera_af01d82d9ccd3acbad8380224dcb2c422}\label{class_camera_af01d82d9ccd3acbad8380224dcb2c422}} 
\index{Camera@{Camera}!rotate@{rotate}}
\index{rotate@{rotate}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{rotate()}{rotate()}\hspace{0.1cm}{\footnotesize\ttfamily [1/2]}}
{\footnotesize\ttfamily void Camera\+::rotate (\begin{DoxyParamCaption}\item[{int}]{x,  }\item[{int}]{y }\end{DoxyParamCaption})}



Modify the yaw and pitch of the camera. 

Method to pitch and yaw the camera.


\begin{DoxyParams}{Parameters}
{\em x} & Horizontal offset of the movement \\
\hline
{\em y} & Vertical offset of the movement \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{class_camera_a9d36fe054977d0ab83ff21e699f3641f}\label{class_camera_a9d36fe054977d0ab83ff21e699f3641f}} 
\index{Camera@{Camera}!rotate@{rotate}}
\index{rotate@{rotate}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{rotate()}{rotate()}\hspace{0.1cm}{\footnotesize\ttfamily [2/2]}}
{\footnotesize\ttfamily void Camera\+::rotate (\begin{DoxyParamCaption}\item[{int}]{z }\end{DoxyParamCaption})}



Modify the roll of the camera. 

Method to roll the camera in xy-\/plane.


\begin{DoxyParams}{Parameters}
{\em z} & Rotation about front axis \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{class_camera_afb2aaa8b715ca3e098183820f93f32dd}\label{class_camera_afb2aaa8b715ca3e098183820f93f32dd}} 
\index{Camera@{Camera}!translate@{translate}}
\index{translate@{translate}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{translate()}{translate()}}
{\footnotesize\ttfamily void Camera\+::translate (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{class_camera_a80cb65605322d27ad3b6d973484509ec}{Camera\+::\+Direction}}}]{direction }\end{DoxyParamCaption})}



Move the camera along either up, front or right axis. 

Method to translate the camera.


\begin{DoxyParams}{Parameters}
{\em direction} & \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{class_camera_a62c2ad6713683230cfc336b3354f535f}\label{class_camera_a62c2ad6713683230cfc336b3354f535f}} 
\index{Camera@{Camera}!zoom@{zoom}}
\index{zoom@{zoom}!Camera@{Camera}}
\doxysubsubsection{\texorpdfstring{zoom()}{zoom()}}
{\footnotesize\ttfamily void Camera\+::zoom (\begin{DoxyParamCaption}\item[{int}]{y }\end{DoxyParamCaption})}



Change the perspective angle. 

Method to zoom the camera.


\begin{DoxyParams}{Parameters}
{\em y} & Vertical offset of the movement \\
\hline
\end{DoxyParams}


The documentation for this class was generated from the following files\+:\begin{DoxyCompactItemize}
\item 
Camera.\+h\item 
Camera.\+cpp\end{DoxyCompactItemize}
